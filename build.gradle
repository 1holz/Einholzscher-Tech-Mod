plugins {
	id 'fabric-loom' version '0.10-SNAPSHOT'
	id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = "${project.archives_base_name}"
version = "${project.mod_version}+${project.minecraft_version}"
group = "${project.maven_group}"

repositories {
	// Add repositories to retrieve artifacts from in here.
	// You should only use this when depending on other mods because
	// Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
	// See https://docs.gradle.org/current/userguide/declaring_repositories.html
	// for more information about repositories.
	//mavenCentral()

    maven {
        name = "CottonMC"
        url = "https://server.bbkr.space/artifactory/libs-release"
    }
    maven {
        name = "Ladysnake Libs"
        url = "https://ladysnake.jfrog.io/artifactory/mods"
    }
//    maven {
//        name = "Ladysnake Libs Alt"
//        url = "https://dl.bintray.com/ladysnake/libs"
//    }
    maven {
        name = "OnyxStudios Alt Alt"
        url = "https://maven.onyxstudios.dev"
    }
}

dependencies {
	//to change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.minecraft_version}+build.${project.yarn_build}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"//-${project.minecraft_version}"

	include modImplementation("io.github.cottonmc:LibGui:${project.lib_gui_version}+${project.minecraft_version}")
	include modImplementation("io.github.onyxstudios:Cardinal-Components-API:${project.cardinal_components_api_version}")
	//include modImplementation("io.github.onyxstudios:Cardinal-Components-API:cardinal-components-base:${project.cardinal_components_api_version}")
	//include modImplementation("io.github.onyxstudios:Cardinal-Components-API:cardinal-components-block:${project.cardinal_components_api_version}")
	implementation files("libs/ehmooshroom-${project.ehmooshroom_version}-${project.minecraft_version}-dev.jar")
	include files("libs/ehmooshroom-${project.ehmooshroom_version}-${project.minecraft_version}-dev.jar")
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	// Minecraft 1.18 (1.18-pre2) upwards uses Java 17.
	it.options.release = 17
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			// add all the jars that should be included when publishing to maven
			from components.java
			//outdated stuff???
			//// add all the jars that should be included when publishing to maven
			//artifact(remapJar) {
			//	builtBy remapJar
			//}
			//artifact(sourcesJar) {
			//	builtBy remapSourcesJar
			//}
		}
	}

	// select the repositories you want to publish to
	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// uncomment to publish to the local maven
		// mavenLocal()

		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}
